<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="Native iOS Mail Example"
		creationComplete="view1_creationCompleteHandler(event)"
		>
	
	<fx:Script>
		<![CDATA[
			/**
			 * NativeMail iOS extension example
			 * @author Piotr Koscierzynski, flashsimulations.com
			 * 
			 * 
			 * 
			 * */
			
			import mx.events.FlexEvent;
			
			import flash.filesystem.File;
			import flash.filesystem.FileMode;
			import flash.filesystem.FileStream;
			
			import pl.randori.air.nativeextensions.ios.MailExtension;
			import pl.randori.air.nativeextensions.ios.MailExtensionEvent;
			
			private var mailExtension:MailExtension; 
			
			//Example call
			private function test() : void
			{
				//This file will be saved into iOS Documents directory
				writeStringToFile('Yabba dabba doo', 'Example file.dat');
				
				mailExtension.sendMail("Hello", "<html><body><p>Hi,</p></br><p>I just want to let you know that this mail has been sent from iOS Adobe AIR app using in-app native mail composer!</br>Visit <a href=\"http://flashsimulations.com\">flashsimulations.com</a> to find out more.</p></br></br>Have a nice day.</body></html>", 
					"bob@smith.com",
					"james.logan@marvel.com",
					"a.einstein@area51.com", 
					["Default.png|bundle|image/png|Application splash screen.png",
					 "Example file.dat|documents|text/xml|A file saved in Adobe AIR iOS app.txt"]);
			}
			
			
			//Synchronous write
			public  function writeStringToFile(string:String, fname:String):void
			{
				var file:File = File.documentsDirectory.resolvePath(fname);
				
				var fileStream:FileStream = new FileStream();
				fileStream.open(file, FileMode.WRITE);
				fileStream.writeUTF(string);
				fileStream.close();
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				test();
			}
			
			protected function button2_clickHandler(event:MouseEvent):void
			{
				infoArea.text += '\nCan send mail: '+(mailExtension.isMailComposerAvailable() ? "YES" : "NO");
			}
			
			protected function onMailEvent(e:MailExtensionEvent):void {
				//MAIL_COMPOSE_RESULT_EVENT
				infoArea.text += '\nReceived mail event: '+e.composeResult;	
			}
			
			protected function view1_creationCompleteHandler(event:FlexEvent):void
			{
				mailExtension = new MailExtension();
				mailExtension.addEventListener(MailExtensionEvent.MAIL_COMPOSER_EVENT, onMailEvent);
				
				// TODO Auto-generated method stub
				
			}
			
		]]>
	</fx:Script>

	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Button top="15" width="186" label="Send mail" click="button1_clickHandler(event)"
			  horizontalCenter="0"/>
	<s:Button top="70" width="186" label="Can I send mail?" click="button2_clickHandler(event)"
			  horizontalCenter="0"/>
	<s:TextArea id="infoArea" left="20" right="20" top="125" bottom="20"/>
	<s:Label left="20" right="20" bottom="3" fontSize="14"
			 text="Â© Piotr Koscierzynski | flashsimulations.com" textAlign="center"
			 verticalAlign="middle"/>
</s:View>
